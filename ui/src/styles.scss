
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gamasenseit-primary: mat.define-palette(mat.$green-palette);
$gamasenseit-accent: mat.define-palette(mat.$light-green-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gamasenseit-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gamasenseit-theme: mat.define-light-theme((
  color: (
    primary: $gamasenseit-primary,
    accent: $gamasenseit-accent,
    warn: $gamasenseit-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($gamasenseit-theme);

/* You can add global styles to this file, and also import other style files */
// @import "~bootstrap/dist/css/bootstrap.css"


// Default variable overrides=

$primary: #2FBF71;
$secondary: #CEF3E0;
$danger: #ff4136;
$warning: #ED7D3A;
$info: #8CD867;
$ligth: #FFFFFF;
$dark: #101A10;

$body-bg: $ligth;
$body-color: $dark;

/*
.degraded {
  background-image: linear-gradient(90deg, rgb(98, 218, 98) 0%,  rgb(165, 255, 218) 100%);
  border: 1px solid rgb(185, 185, 185);
  color: black;
  transition: background 0s;
}

.degraded:hover {
  background-image: linear-gradient(90deg, rgb(165, 255, 218) 0%, rgb(79, 188, 231) 100%);
}
*/

.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent, .degraded {
  box-shadow: 0 48px 40px -40px rgb(110, 221, 255) inset;
  background-color: rgb(98, 218, 98);
  transition: box-shadow 0.3s, background-color 0.3s;
  color: black;
  border: 1px solid rgb(185, 185, 185);
}

.degraded:hover {
  background-color: rgb(165, 255, 218);
  box-shadow: 0 48px 40px -40px rgb(79, 188, 231) inset;
}

 .degraded:active {
  background-color: rgb(79, 188, 231);
  box-shadow: 0 48px 40px -40px rgb(98, 218, 98) inset;
}

.degraded:disabled, .degraded:disabled:hover, .degraded:disabled:active   {
  background-color: rgb(150, 150, 150);
  box-shadow: 0 48px 40px -40px rgb(230, 230, 230) inset;
}

.box-wrapper {
  transition: all 0.2s linear;
  width: 100% !important;
  padding: 0;
  @media (min-width: 400px) {
    padding: 0.75rem;
  }
  @media (min-width: 576px) {
    padding: 1.5rem;
  }
}

.box {
  transition: all 0.2s linear;
  background-color: white;
  height: 100%;
  width: 100%;
  overflow: hidden;
  padding: 0.5rem;
  box-shadow: 0 0.25rem 0.5rem rgb(0 0 0 / 35%);

  @media (min-width: 400px) {
    padding: 0.75rem;
    box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 20%);
    border-radius: 15px !important;
    border: 1px solid rgb(236, 236, 236);
  }
  @media (min-width: 400px) {
    padding: 0.75rem;
  }
  @media (min-width: 576px) {
    padding: 1.5rem;
  }
}

.little-box {
  @extend .box;
  width: 100%;
  max-width: 768px;
  height: fit-content;
  margin: auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.unselectable {
  -webkit-touch-callout: none !important;
  -webkit-user-select: none !important;
  -khtml-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

.vh-100 {
  height: 100vh !important;
}
.vh-50 {
  height: 50vh !important;
}

.text-ellipsis {
  display: block;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color:  rgb(98, 218, 98);
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}


// Leaflet & OpenStreetMAp
@import "../node_modules/leaflet/dist/leaflet.css";
.leaflet-default-icon-path {
  background-image: url("/assets/markers/marker-icon.png");
}

// bootstrap
@import "../node_modules/bootstrap/scss/bootstrap";

html, body { height: 100%; margin: 0px; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

h1 { overflow: hidden}

